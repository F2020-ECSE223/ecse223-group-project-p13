class Appointment{
    boolean isDayOf= false;
    existStatus{
        Before{
          	toggleStart[getIsDayOf()] -> InProgress;
            toggleCancel[!getIsDayOf()] -> Final;
          updateDate(TimeSlot timeslot)/{
              acceptDateUpdate(timeslot);
          }->Before;
          updateService(Service service)/{
              acceptServiceUpdate(service);
          }->Before;

        }
        InProgress{
            updateDate(TimeSlot timeslot) /{
                rejectDateUpdate(timeslot);
            } -> InProgress;
          updateService(Service service)/{
              rejectServiceUpdate(service);
          }-> InProgress;
          toggleEnded->Final;
        }
    }

    private rejectDateUpdate(TimeSlot timeslot){
    	throw new RunTimeException("You cannot update the date if the appointment is in progress");
    }

    private rejectServiceUpdate(Service service){
    	throw new RunTimeException("You cannot update a service if the appointment is in progress");
    }

    private acceptServiceUpdate(Service service){
        if(service != null){
            this.setBookableService(service);
        }
      else{
      	getFlexiBook().addBookableService(service);
      }
    }
    private acceptDateUpdate(TimeSlot timeslot){
       if(timeslot != null){
           this.setTimeSlot(timeslot);
       }
       else{
          	getFlexiBook().addTimeSlot(timeslot);
       }

    }

}
